----------------------人物篇--------------------
(注释：冒号后要加空格再写数据）
◎基本介绍◎
<BMP_BEGIN>
name: xxx 人名 
head: sprite\sys\xxx_f.bmp 大头像（选人的图）位置 
small: sprite\sys\xxx_s.bmp 小全身像（游戏时血格旁边的样子）位置 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
(w: 每一格的宽度 ; h: 每一格的高度 ; row.col: 那一张图总共有几行几列 ;
file(xx-xx): 是指这张图载入了几张分割图片,要按数字来编排分割图的号码)
walking_frame_rate :走路的动作变换的时间(值愈大，则愈慢)
walking_speed :移动速度 
walking_speedz :行时斜移动的速度 
running_frame_rate :跑步的动作变换的时间
running_speed :跑速度 
running_speedz :跑时斜移动的速度 
heavy_walking_speed :拿重物的移动速度 
heavy_walking_speedz:拿重物时斜移动的速度 
heavy_running_speed :拿重物的跑速度 
heavy_running_speedz:拿重物时斜跑的速度 
jump_height :跳的高度 
jump_distance :跳的距离 
jump_distancez :跳时斜跳的距离 
dash_height :衝跳的高度 
dash_distance :衝跳的距离 
dash_distancez :衝跳时斜衝跳的距离 
rowing_height 授身时向上的高度(负值)
rowing_distance 授身时向后的速度
<BMP_END>



◎人物act(即frame)的分布◎

frame是人物的一帧动作，你能看到有许多的<frame>到<frame_end>，即该帧动作。<frame> 后面是帧编号，在后面是帧的名字（可以乱改，仅注释作用）如<frame> 0 standing   ...略... <frame_end>这一帧是站立时的第一个动作。
这中间（略部分）有该帧动作各种数据，如图片（pic），持续时间多久（wait），下一帧编码（next），帧属性（state），<body>...<body_end>结构就是身体范围，<itr>...<itr_end>结构是攻击范围（一些帧才有），<opoint>...<opoint_end>结构是放出技能的相关数据（一些帧才有)，<wpoint>...<wpoint_end>结构是假如手中有武器，拿武器的位置与方式，<bpoint>...<bpoint_end>是假如嘴角流血，留血的位置。这些内容将在改档教学1.2.3中介绍。

0 ~ 3:      standing (站立)
5 ~ 8:      walking (行走)
9 ~ 11:     running (跑步)
12 ~ 15:    heavy_obj_walk (拿重物時走路)
16 ~ 18:    heavy_obj_run (拿重物時跑步)
19:         heavy_stop_run (拿重物時煞車)
20 ~ 23:    normal_weapon_atck (拿轻物時攻击)
25 ~ 28:    normal_weapon_atck (同前，分成兩个动作)
30 ~ 33:    jump_weapon_atck (拿轻物時跳攻击)
35 ~ 37:    run_weapon_atck (拿轻物時跑攻击)
40 ~ 43:    dash_weapon_atck (拿轻物時跑跳攻击)
45 ~ 47:    light_weapon_thw (丟出轻物)
50 ~ 51:    heavy_weapon_thw (丟出重物)
52 ~ 54:    sky_lgt_wp_thw (跳時丟出轻物)
55 ~ 58:    weapon_drink (喝可以喝的道具)
60 ~ 62:    punch (普通攻击)
65 ~ 67:    punch (同前，分成兩个动作)
70 ~ 75:    super_punch (重击)
80 ~ 81:    jump_attack (跳攻击)
85 ~ 87:    run_attack (跑攻击)
90 ~ 91:    dash_attack (跑跳攻击)
95:         dash_defend (跑跳防禦) ←有這个动作嗎？？？
100 ~ 101: rowing (向後授身)
103 ~ 107: rowing (迴避、滾地)
108 ~ 109: rowing (向前授身)
110:        defend (防禦)
111:        defend (防禦時被打到)
112 ~ 114: broken_defend (破擋，即檔不住時的动作)
115 ~ 116: picking_light (撿起轻物)
117:        picking_heavy (撿起重物)
120 ~ 123: catching (捉住人時的动作)
130 ~ 144: picked_caught (被捉，其中有一些是被捉時被打的动作)
180 ~ 185: falling (向前跌倒)
186 ~ 191: falling (向後跌倒)
200 ~ 202: ice (被冰封)
203 ~ 206: fire (被火燒)
207:        tired (累，但不是暈眩) ←有這个动作嗎？？？
210 ~ 212: jump (跳躍)
213 ~ 214: dash (跑跳)
215:        crouch (爬起)
218:        stop_running (煞車)
219:        crouch2 (第二个爬起的动作)
220 ~ 221: injured (被打到向後退的动作)
222 ~ 223: injured (被打到向前移的动作)
224 ~ 229: injured (暈眩)
230:        lying (躺著的倒地，死亡時會自动不斷的重複此动作)
231:        lying (趴著的倒地，死亡時會自动不斷的重複此动作)
232 ~ 234: throw_lying_man (摔出被捉住的人)
399:        dummy (人物模型) ←不可刪除，且為人物frame数的上限
※235~398之間的frame就是絕技的动作，是可以任意命名及改变的。
※有些frame的数量因人而異，例如Bandit的punch是60~61 & 65~66，但Davis是
60~63 & 65~68。

◎frame解說◎
<FRAME>=动作開始
72 =动作号码
super_punch =动作名稱
pic: 8 =图檔位置(從0開始算)
state:
0=站立(stand)
1=行走(walk)
2=跑步(run)
3=普通拳腳攻击(punch)
4=跳(jump)
5=突進(dash，即跑+跳)
7=擋(defend)
8=破擋(broken defend)
9=捉人(catching)
10=被捉(picked caught)
11=被攻击(injured)
12=fall大於60才會被打到
13=有冰碎效果
14=倒在地上(lying，可使com不會追你)
15=被冰封(ice，可被同盟攻击)
16=暈眩(tired)可被敵人捉住
17=喝(weapon drink)可以喝的物件被消耗 
18=燃燒(fire，可攻击我方同盟)
19=firen的烈火焚身(burn run)
301=deep的鬼哭斬(dash sword，此state具有人物上下移动的功能)
400=woody瞬間轉移(teleport，移往最近的敵人)
401=woody瞬間轉移(teleport，移往最近的隊友)
500=rudolf轉換成其他角色(transform)
501=rudolf轉換回來(transform_b)
1700=治療自己
9995=变身成LouisEX(transform，任何人都可以)
9996=爆出盔甲(transform，任何人都可以)
9997=訊息(come,move之類，能在任何地方看見)
9998=訊息刪除
9999=毀壞的武器(broken weapon)
<特別說明>18會有冒煙效果，但此state的攻击會傷及我方。

wait: 2 =停頓时间
next: 73 =下一个动作是
dvx: =向前,後行多少
dvy: =向天,地行多少
dvz: =向上,下行多少
centerx: 是以哪一點作為人物的中央
centery: 是以哪一點作為人物的底部(腳的位置)
hit_a: 按攻击時,跳到哪一个frame?
hit_d: 按防衛時,跳到哪一个frame? 
hit_j: 按跳時,跳到哪一个frame?
hit_Ua: 按D^A時,跳到哪一个frame? 
hit_Fj: 按D>J時,跳到哪一个frame?
hit_Da: 按DvA時,跳到哪一个frame?
hit_ja: 按DJA時,跳到哪一个frame?
以此類推...

<特別說明>
1.next:0是不斷重複此动作，hit_?:的0是指沒有設定。
2.next、hit_? :999是指回到隨機动作
3.next、hit_? :1000是消失
4.next:1280=rudolf的隱形
(使用隱身和变化術也會影響到分身)
5.next: -??? 會反向進行第???个frame
<特別發現>next:1200~1299是隱形
◎itr解說◎
itr: =身體攻击动作開始
kind:
0=特殊特技
1=捉住暈眩(state:16)的人
2=撿武器
3=強迫抓人
6=敵人靠近按A時是重击
7=撿武器不影響动作
8=injury数值变成治療多少hp，动作跳至dvx:?
9=打中敵人自己hp歸0(如John的防護罩)
10=henry魔王之樂章效果
14=阻擋
15=飛起
16=結冰
1???=被你打到會跳到第???个frame(如人質的kind)
x: 40 ,w: 35=攻击前~後的距离   y: 5 ,h: 45 攻击上~下的距离
dvx:3   =打中會往後彈後多遠
dvy:-10 =打中會彈多高(負值是向天空，正值是向地面)
fall: 70 =倒下的機會 
fall0是敵人只动一下 
fall30是打兩下敵人就暈 
fall40是打一下往後退打第二下就倒地
fall60是打一下暈眩打第二下就倒地
fall70是必定倒地
vrest:15 =同一个frame打到人的中間間隔时间(vrest越小，同一个frame就會打
          到越多下)。如Davis的昇龍霸，原本vrest只有10，若改的更低，則
          會造成如強化網頁的神龍拳的連击效果。
※注意：vrest值最低只能是4，更低的話打到人會卡住。
arest: (vrest無效)一攻击到一个人，多久後才能再打一个人

bdefend: 60 =破擋的機會(即打破敵人防禦的機會)
bdefend: 60打一次就破擋；同fall，如值是16則16+16+16+16大於60所以值是16
         時打敵人4下就破擋。
bdefend: 100則完全擋不住，就算按擋也會讓你直接被打到，連破擋的动作都跳
         過。且有防禦效果的人物(如Julian.Knight.Louis)也防不住；道具也
         會直接被毀掉(不論道具的HP有多少)。
injury: 40 =殺傷力(即損害敵人hp多少；玩家的hp是預設值的500)
在injury後面加上以下effect會有特效(僅限於kind:0時有作用)
effect: 0 拳击 
effect: 1 利器攻击 
effect: 2 著火 
effect: 3 結冰 
effect: 4 穿過敵人(僅能打中type:1.2.3.4.5.6的物件) 
effect: 5 (或以上)沒效果，也打不中任何東西 
effect: 20 定身火
effect: 21 定身火
effect: 22 定身火
effect: 30 定身冰
effect可以加上負號(有效果但無聲音)。
若要加大攻击的z軸範圍,只要在effect或injury的後面加上zwidth: ??即可
(沒有effect就是加在injury的後面,若有effect則加在effect的後面)
itr_end: =身體攻击动作結束

<特別說明>大範圍攻击→
itr:
kind: 0 x: -x y: -x w: x h: x dvx: ? dvy: ? fall: ? vrest: ? 
bdefend: ? injury: ? zwidth: x effect: ? 
itr_end:
x数值越高則範圍越大，?数值是看自己高興填寫的。

◎bdy解說◎
bdy: =身體(受攻击的部分)開始
kind: 0 特殊特技
x: 26 w: 35 =受攻击前~後的距离   y: 12 h: 66=受攻击上~下的距离
bdy_end:=身體結束
<FRAME_END>= 动作結束
若要消耗mp只要在<FRAME>之後的第一行結尾加上mp: ?? 即可。
※若mp為1000以上則會变成扣hp，如firen的大轟炸是4300，就會扣40點hp及300
點的mp
聲音：只要再第一行與第二行之間插入sound: data/???.wav即可

◎opoint解說◎
若要在某个动作加入發出氣功波類型的絕技，只要在frame裏加入以下即可： 
opoint: 
kind: ? x: ? y: ? action: ? dvx: ? dvy: ? oid: ? facing: ? 
opoint_end:
opoint: objectpoint開始
kind: 1=發出氣功波
x:發出的氣功的前後位置
y:發出的氣功的天地位置
action: 招式的第几个frame
dvx:向前後飛行的速度
dvy:向天地飛行的速度
oid:氣功波的id(請參考data/data.txt)
facing:数量及正反 (如数量是1个,正向→facing: 0；2个,正向→facing:20 ；
1个,反向→facing:1 ； 2个,反向→facing: 21)
前面数字是数量，数量若為1則不須填，但2以上就須填了；後面数字為正反向，
偶数是正向，奇数是反向。
opoint_end: objectpoint結束

◎wpoint解說◎
若frame中有wpoint如下：
wpoint: 
kind: ? x: ? y: ? weaponact: ? attacking: ? cover: ? dvx: ? dvy: ? 
dvz: ?
wpoint_end:
wpoint:是指此动作若拿著武器時則武器會是哪一个。
x.y:武器的位置座標
weaponact:武器的第几个frame
attacking:此時武器有否攻击性(0是無攻击，1是站著時的攻击，2是跳時的攻击
          ，3是衝時的攻击，4是衝跳時的攻击)
cover: 0是你會蓋住武器的图示 1是武器會蓋住你的图示
dvx.dvy.dvz:武器會往x.y.z座標移动多少
wpoint_end: 武器指令結束

◎bpoint解說◎
bpoint:
   x: 43 y: 38
bpoint_end:
bpoint: 流血指令開始
x: y: 嘴角的位置
bpoint_end: 流血指令結束
※hp少於1/3時，嘴角才會流血。

◎抓人◎
若要抓起敵人,則要在itr中寫入
itr: 
kind: ? x: ? y: ? w: ? h: ? vrest: ? 
catchingact: ??? ??? caughtact: ??? ??? 
itr_end:
caughtingact: 指抓住敵人後自己跳到第几个frame(需重複寫兩次)
caughtact: 指抓住敵人後敵人跳到第几个frame

或者在cpoint中寫入
cpoint:
kind: ? x: ? y: ? vaction: ? aaction: ? taction: ?
injury: ? hurtable: ? decrease: ? throwvx: ? throwvy: ?
throwvz: ? throwinjury: ?
另外有fronthurtact: ? backhurtact: ? dircontrol: ?
cpoint_end:

cpoint: 抓人指令開始
kind: 抓人狀態，1是抓人，2是被抓的(必須配合，1抓2的，否則抓不起來)
x: x座標，與被抓的x座標配合
y: y座標，與被抓的y座標配合
vaction: 敵人的act
aaction: 按A時自己跳到的act
taction: 按→A時自己跳到的act
injury: 被抓的敵人受傷量(正值是受傷+停格，負值是受傷不停格)
hurtable: 敵人會不會被人打到？(0不會，1會)※但vaction:在133 ~ 144的敵
          人不會被打到
decrease: (負值)抓住的时间減少值(总抓住的时间值301/?=抓住的时间)
throwvx: 丟出去的x速度
throwvy: 丟出去的y速度
throwvz: 丟出去的z速度(要按↑↓才會丟斜的)
throwinjury: 被丟者的受傷量
※-842150451不知是什麼…
fronthurtact: (正面被打後的act)
backhurtact: (背面被打後的act)
dircontrol: 控制方向(按著→進入此动作會向右轉，負数則會相反)
cpoint_end: 抓人指令結束
throwinjury完全說明
※throwvx: 不能為0，否則自己會消失。-1是变成被抓者的id(樣子)如Rudolf，
之後可按DJA变回來，若想再变回去則只能用state: 501
可惜的是會無法使用按DJA會使出的招式(會变回來)

◎關於变身◎
在state的地方寫成8???(←???是要寫入人物的id)
並且在要变成的那个人的图檔位置做以下的改变：
角色有一个图檔時： 
<BMP_BEGIN>
name: xxx 
head: sprite\sys\xxx_f.bmp 
small: sprite\sys\xxx_s.bmp 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7
角色有兩个图檔時： 
<BMP_BEGIN>
name: xxx 
head: sprite\sys\xxx_f.bmp 
small: sprite\sys\xxx_s.bmp 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(210-279): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7
角色有三个图檔時： 
<BMP_BEGIN>
name: xxx 
head: sprite\sys\xxx_f.bmp 
small: sprite\sys\xxx_s.bmp 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(210-279): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(280-349): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(350-419): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(420-489): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7
角色有四个图檔時： 
<BMP_BEGIN>
name: xxx 
head: sprite\sys\xxx_f.bmp 
small: sprite\sys\xxx_s.bmp 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(210-279): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(280-349): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(350-419): sprite\sys\xxx_3.bmp w: 79 h: 79 row: 10 col: 7 
file(420-489): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(490-559): sprite\sys\xxx_3.bmp w: 79 h: 79 row: 10 col: 7
角色有五个图檔時： 
<BMP_BEGIN>
name: xxx 
head: sprite\sys\xxx_f.bmp 
small: sprite\sys\xxx_s.bmp 
file(0-69): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(70-139): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(140-209): sprite\sys\xxx_0.bmp w: 79 h: 79 row: 10 col: 7 
file(210-279): sprite\sys\xxx_1.bmp w: 79 h: 79 row: 10 col: 7 
file(280-349): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(350-419): sprite\sys\xxx_3.bmp w: 79 h: 79 row: 10 col: 7 
file(420-489): sprite\sys\xxx_2.bmp w: 79 h: 79 row: 10 col: 7 
file(490-559): sprite\sys\xxx_3.bmp w: 79 h: 79 row: 10 col: 7 
file(560-629): sprite\sys\xxx_4.bmp w: 79 h: 79 row: 10 col: 7 
file(630-699): sprite\sys\xxx_4.bmp w: 79 h: 79 row: 10 col: 7 
file(700-769): sprite\sys\xxx_4.bmp w: 79 h: 79 row: 10 col: 7
以此類推............
※注意：若需作此改变，不管你的bmp檔有几个图你都要寫成70张图的設定值。
如:Bat_2.bmp這个图檔僅有二张图，但設定值必須改成file(280-349)、row:10
   、col:7這樣，否則會沒有顯示图檔。
图檔最多不能超出500个。